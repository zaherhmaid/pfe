{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/row-breaks-xform.js"],"names":["PageBreaksXform","require","utils","ListXform","RowBreaksXform","module","exports","options","tag","count","childXform","call","inherits","render","xmlStream","model","length","openNode","$","addAttribute","$count","forEach","childModel","closeNode","empty","leafNode"],"mappings":"AAAA;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMG,cAAc,GAAIC,MAAM,CAACC,OAAP,GAAiB,YAAW;AAClD,MAAMC,OAAO,GAAG;AAAEC,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,KAAK,EAAE,IAA3B;AAAiCC,IAAAA,UAAU,EAAE,IAAIV,eAAJ;AAA7C,GAAhB;AACAG,EAAAA,SAAS,CAACQ,IAAV,CAAe,IAAf,EAAqBJ,OAArB;AACD,CAHD;;AAKAL,KAAK,CAACU,QAAN,CAAeR,cAAf,EAA+BD,SAA/B,EAA0C;AACxC;AAEAU,EAAAA,MAHwC,kBAGjCC,SAHiC,EAGtBC,KAHsB,EAGf;AACvB,QAAIA,KAAK,IAAIA,KAAK,CAACC,MAAnB,EAA2B;AACzBF,MAAAA,SAAS,CAACG,QAAV,CAAmB,KAAKT,GAAxB,EAA6B,KAAKU,CAAlC;;AACA,UAAI,KAAKT,KAAT,EAAgB;AACdK,QAAAA,SAAS,CAACK,YAAV,CAAuB,KAAKC,MAA5B,EAAoCL,KAAK,CAACC,MAA1C;AACAF,QAAAA,SAAS,CAACK,YAAV,CAAuB,kBAAvB,EAA2CJ,KAAK,CAACC,MAAjD;AACD;;AALwB,UAOjBN,UAPiB,GAOF,IAPE,CAOjBA,UAPiB;AAQzBK,MAAAA,KAAK,CAACM,OAAN,CAAc,UAAAC,UAAU,EAAI;AAC1BZ,QAAAA,UAAU,CAACG,MAAX,CAAkBC,SAAlB,EAA6BQ,UAA7B;AACD,OAFD;AAIAR,MAAAA,SAAS,CAACS,SAAV;AACD,KAbD,MAaO,IAAI,KAAKC,KAAT,EAAgB;AACrBV,MAAAA,SAAS,CAACW,QAAV,CAAmB,KAAKjB,GAAxB;AACD;AACF;AApBuC,CAA1C","sourcesContent":["'use strict';\n\nconst PageBreaksXform = require('./page-breaks-xform');\n\nconst utils = require('../../../utils/utils');\nconst ListXform = require('../list-xform');\n\nconst RowBreaksXform = (module.exports = function() {\n  const options = { tag: 'rowBreaks', count: true, childXform: new PageBreaksXform() };\n  ListXform.call(this, options);\n});\n\nutils.inherits(RowBreaksXform, ListXform, {\n  // get tag() { return 'rowBreaks'; },\n\n  render(xmlStream, model) {\n    if (model && model.length) {\n      xmlStream.openNode(this.tag, this.$);\n      if (this.count) {\n        xmlStream.addAttribute(this.$count, model.length);\n        xmlStream.addAttribute('manualBreakCount', model.length);\n      }\n\n      const { childXform } = this;\n      model.forEach(childModel => {\n        childXform.render(xmlStream, childModel);\n      });\n\n      xmlStream.closeNode();\n    } else if (this.empty) {\n      xmlStream.leafNode(this.tag);\n    }\n  },\n});\n"],"file":"row-breaks-xform.js"}