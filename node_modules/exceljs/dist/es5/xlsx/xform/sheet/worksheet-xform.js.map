{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/worksheet-xform.js"],"names":["_","require","colCache","utils","XmlStream","RelType","Merges","BaseXform","ListXform","RowXform","ColXform","DimensionXform","HyperlinkXform","MergeCellXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","SheetViewXform","PageMarginsXform","PageSetupXform","PrintOptionsXform","AutoFilterXform","PictureXform","DrawingXform","RowBreaksXform","WorkSheetXform","module","exports","options","maxRows","maxCols","map","sheetPr","dimension","sheetViews","tag","count","childXform","sheetFormatPr","cols","sheetData","empty","maxItems","autoFilter","mergeCells","rowBreaks","hyperlinks","pageMargins","dataValidations","pageSetup","printOptions","picture","drawing","inherits","WORKSHEET_ATTRIBUTES","xmlns","prepare","model","merges","comments","formulae","siFormulae","rows","rels","nextRid","r","length","forEach","hyperlink","rId","push","Id","Type","Hyperlink","Target","target","TargetMode","comment","Comments","id","vmlDrawing","VmlDrawing","item","refAddress","decodeAddress","ref","commentRefs","commentName","drawingRelsHash","bookImage","media","medium","type","imageId","Image","name","extension","background","image","drawingsCount","anchors","drawings","rIdImage","range","render","xmlStream","openXml","StdDocAttributes","openNode","sheetFormatPropertiesModel","properties","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","undefined","sheetPropertiesModel","outlineProperties","tabColor","fitToPage","pageMarginsModel","margins","printOptionsModel","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","dimensions","views","rel","leafNode","closeNode","parseOpen","node","parser","each","xform","reset","parseText","text","parseClose","outlinePropertiesx","sheetProperties","Object","assign","reconcile","relationships","reduce","h","commentsMap","hyperlinkMap","address","filter","Boolean","row","cells","drawingRel","match","drawingName","anchor","index","backgroundRel","split","mediaIndex"],"mappings":"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","sourcesContent":["'use strict';\n\nconst _ = require('../../../utils/under-dash');\n\nconst colCache = require('../../../utils/col-cache');\nconst utils = require('../../../utils/utils');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst RelType = require('../../rel-type');\n\nconst Merges = require('./merges');\n\nconst BaseXform = require('../base-xform');\nconst ListXform = require('../list-xform');\nconst RowXform = require('./row-xform');\nconst ColXform = require('./col-xform');\nconst DimensionXform = require('./dimension-xform');\nconst HyperlinkXform = require('./hyperlink-xform');\nconst MergeCellXform = require('./merge-cell-xform');\nconst DataValidationsXform = require('./data-validations-xform');\nconst SheetPropertiesXform = require('./sheet-properties-xform');\nconst SheetFormatPropertiesXform = require('./sheet-format-properties-xform');\nconst SheetViewXform = require('./sheet-view-xform');\nconst PageMarginsXform = require('./page-margins-xform');\nconst PageSetupXform = require('./page-setup-xform');\nconst PrintOptionsXform = require('./print-options-xform');\nconst AutoFilterXform = require('./auto-filter-xform');\nconst PictureXform = require('./picture-xform');\nconst DrawingXform = require('./drawing-xform');\nconst RowBreaksXform = require('./row-breaks-xform');\n\nconst WorkSheetXform = (module.exports = function(options) {\n  const maxRows = options && options.maxRows;\n  const maxCols = options && options.maxCols;\n  this.map = {\n    sheetPr: new SheetPropertiesXform(),\n    dimension: new DimensionXform(),\n    sheetViews: new ListXform({ tag: 'sheetViews', count: false, childXform: new SheetViewXform() }),\n    sheetFormatPr: new SheetFormatPropertiesXform(),\n    cols: new ListXform({ tag: 'cols', count: false, childXform: new ColXform() }),\n    sheetData: new ListXform({ tag: 'sheetData', count: false, empty: true, childXform: new RowXform({ maxItems: maxCols }), maxItems: maxRows }),\n    autoFilter: new AutoFilterXform(),\n    mergeCells: new ListXform({ tag: 'mergeCells', count: true, childXform: new MergeCellXform() }),\n    rowBreaks: new RowBreaksXform(),\n    hyperlinks: new ListXform({ tag: 'hyperlinks', count: false, childXform: new HyperlinkXform() }),\n    pageMargins: new PageMarginsXform(),\n    dataValidations: new DataValidationsXform(),\n    pageSetup: new PageSetupXform(),\n    printOptions: new PrintOptionsXform(),\n    picture: new PictureXform(),\n    drawing: new DrawingXform(),\n  };\n});\n\nutils.inherits(\n  WorkSheetXform,\n  BaseXform,\n  {\n    WORKSHEET_ATTRIBUTES: {\n      xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n      'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n      'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n      'mc:Ignorable': 'x14ac',\n      'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n    },\n  },\n  {\n    prepare(model, options) {\n      options.merges = new Merges();\n      model.hyperlinks = options.hyperlinks = [];\n      model.comments = options.comments = [];\n\n      options.formulae = {};\n      options.siFormulae = 0;\n      this.map.cols.prepare(model.cols, options);\n      this.map.sheetData.prepare(model.rows, options);\n\n      model.mergeCells = options.merges.mergeCells;\n\n      // prepare relationships\n      const rels = (model.rels = []);\n      function nextRid(r) {\n        return `rId${r.length + 1}`;\n      }\n\n      model.hyperlinks.forEach(hyperlink => {\n        const rId = nextRid(rels);\n        hyperlink.rId = rId;\n        rels.push({\n          Id: rId,\n          Type: RelType.Hyperlink,\n          Target: hyperlink.target,\n          TargetMode: 'External',\n        });\n      });\n\n      // prepare comment relationships\n      if (model.comments.length > 0) {\n        const comment = {\n          Id: nextRid(rels),\n          Type: RelType.Comments,\n          Target: `../comments${model.id}.xml`,\n        };\n        rels.push(comment);\n        const vmlDrawing = {\n          Id: nextRid(rels),\n          Type: RelType.VmlDrawing,\n          Target: `../drawings/vmlDrawing${model.id}.vml`,\n        };\n        rels.push(vmlDrawing);\n\n        model.comments.forEach(item => {\n          item.refAddress = colCache.decodeAddress(item.ref);\n        });\n\n        options.commentRefs.push({\n          commentName: `comments${model.id}`,\n          vmlDrawing: `vmlDrawing${model.id}`,\n        });\n      }\n\n      const drawingRelsHash = [];\n      let bookImage;\n      model.media.forEach(medium => {\n        if (medium.type === 'background') {\n          const rId = nextRid(rels);\n          bookImage = options.media[medium.imageId];\n          rels.push({\n            Id: rId,\n            Type: RelType.Image,\n            Target: `../media/${bookImage.name}.${bookImage.extension}`,\n          });\n          model.background = {\n            rId,\n          };\n          model.image = options.media[medium.imageId];\n        } else if (medium.type === 'image') {\n          let { drawing } = model;\n          bookImage = options.media[medium.imageId];\n          if (!drawing) {\n            drawing = model.drawing = {\n              rId: nextRid(rels),\n              name: `drawing${++options.drawingsCount}`,\n              anchors: [],\n              rels: [],\n            };\n            options.drawings.push(drawing);\n            rels.push({\n              Id: drawing.rId,\n              Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing',\n              Target: `../drawings/${drawing.name}.xml`,\n            });\n          }\n          let rIdImage = drawingRelsHash[medium.imageId];\n          if (!rIdImage) {\n            rIdImage = nextRid(drawing.rels);\n            drawingRelsHash[medium.imageId] = rIdImage;\n            drawing.rels.push({\n              Id: rIdImage,\n              Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n              Target: `../media/${bookImage.name}.${bookImage.extension}`,\n            });\n          }\n          drawing.anchors.push({\n            picture: {\n              rId: rIdImage,\n            },\n            range: medium.range,\n          });\n        }\n      });\n    },\n\n    render(xmlStream, model) {\n      xmlStream.openXml(XmlStream.StdDocAttributes);\n      xmlStream.openNode('worksheet', WorkSheetXform.WORKSHEET_ATTRIBUTES);\n\n      const sheetFormatPropertiesModel = model.properties\n        ? {\n            defaultRowHeight: model.properties.defaultRowHeight,\n            dyDescent: model.properties.dyDescent,\n            outlineLevelCol: model.properties.outlineLevelCol,\n            outlineLevelRow: model.properties.outlineLevelRow,\n          }\n        : undefined;\n      const sheetPropertiesModel = {\n        outlineProperties: model.properties && model.properties.outlineProperties,\n        tabColor: model.properties && model.properties.tabColor,\n        pageSetup:\n          model.pageSetup && model.pageSetup.fitToPage\n            ? {\n                fitToPage: model.pageSetup.fitToPage,\n              }\n            : undefined,\n      };\n      const pageMarginsModel = model.pageSetup && model.pageSetup.margins;\n      const printOptionsModel = {\n        showRowColHeaders: model.showRowColHeaders,\n        showGridLines: model.showGridLines,\n        horizontalCentered: model.horizontalCentered,\n        verticalCentered: model.verticalCentered,\n      };\n\n      this.map.sheetPr.render(xmlStream, sheetPropertiesModel);\n      this.map.dimension.render(xmlStream, model.dimensions);\n      this.map.sheetViews.render(xmlStream, model.views);\n      this.map.sheetFormatPr.render(xmlStream, sheetFormatPropertiesModel);\n      this.map.cols.render(xmlStream, model.cols);\n      this.map.sheetData.render(xmlStream, model.rows);\n      this.map.autoFilter.render(xmlStream, model.autoFilter);\n      this.map.mergeCells.render(xmlStream, model.mergeCells);\n      this.map.dataValidations.render(xmlStream, model.dataValidations);\n      // For some reason hyperlinks have to be after the data validations\n      this.map.hyperlinks.render(xmlStream, model.hyperlinks);\n      this.map.pageMargins.render(xmlStream, pageMarginsModel);\n      this.map.printOptions.render(xmlStream, printOptionsModel);\n      this.map.pageSetup.render(xmlStream, model.pageSetup);\n      this.map.rowBreaks.render(xmlStream, model.rowBreaks);\n      this.map.drawing.render(xmlStream, model.drawing); // Note: must be after rowBreaks\n      this.map.picture.render(xmlStream, model.background); // Note: must be after drawing\n\n      if (model.rels) {\n        // add a <legacyDrawing /> node for each comment\n        model.rels.forEach(rel => {\n          if (rel.Type === RelType.VmlDrawing) {\n            xmlStream.leafNode('legacyDrawing', {'r:id': rel.Id});\n          }\n        });\n      }\n\n      xmlStream.closeNode();\n    },\n\n    parseOpen(node) {\n      if (this.parser) {\n        this.parser.parseOpen(node);\n        return true;\n      }\n\n      if (node.name === 'worksheet') {\n        _.each(this.map, xform => {\n          xform.reset();\n        });\n        return true;\n      }\n\n      this.parser = this.map[node.name];\n      if (this.parser) {\n        this.parser.parseOpen(node);\n      }\n      return true;\n    },\n    parseText(text) {\n      if (this.parser) {\n        this.parser.parseText(text);\n      }\n    },\n    parseClose(name) {\n      if (this.parser) {\n        if (!this.parser.parseClose(name)) {\n          this.parser = undefined;\n        }\n        return true;\n      }\n      switch (name) {\n        case 'worksheet': {\n          const properties = this.map.sheetFormatPr.model;\n          if (this.map.sheetPr.model && this.map.sheetPr.model.tabColor) {\n            properties.tabColor = this.map.sheetPr.model.tabColor;\n          }\n          if (this.map.sheetPr.model && this.map.sheetPr.model.outlineProperties) {\n            properties.outlineProperties = this.map.sheetPr.model.outlinePropertiesx;\n          }\n          const sheetProperties = {\n            fitToPage: (this.map.sheetPr.model && this.map.sheetPr.model.pageSetup && this.map.sheetPr.model.pageSetup.fitToPage) || false,\n            margins: this.map.pageMargins.model,\n          };\n          const pageSetup = Object.assign(sheetProperties, this.map.pageSetup.model, this.map.printOptions.model);\n          this.model = {\n            dimensions: this.map.dimension.model,\n            cols: this.map.cols.model,\n            rows: this.map.sheetData.model,\n            mergeCells: this.map.mergeCells.model,\n            hyperlinks: this.map.hyperlinks.model,\n            dataValidations: this.map.dataValidations.model,\n            properties,\n            views: this.map.sheetViews.model,\n            pageSetup,\n            background: this.map.picture.model,\n            drawing: this.map.drawing.model,\n          };\n\n          if (this.map.autoFilter.model) {\n            this.model.autoFilter = this.map.autoFilter.model;\n          }\n          return false;\n        }\n\n        default:\n          // not quite sure how we get here!\n          return true;\n      }\n    },\n\n    reconcile(model, options) {\n      // options.merges = new Merges();\n      // options.merges.reconcile(model.mergeCells, model.rows);\n      const rels = (model.relationships || []).reduce((h, rel) => {\n        h[rel.Id] = rel;\n        if (rel.Type === RelType.Comments) {\n          model.comments = options.comments[rel.Target].comments;\n        }\n        return h;\n      }, {});\n      options.commentsMap = (model.comments || []).reduce((h, comment) => {\n        if (comment.ref) {\n          h[comment.ref] = comment;\n        }\n        return h;\n      }, {});\n      options.hyperlinkMap = (model.hyperlinks || []).reduce((h, hyperlink) => {\n        if (hyperlink.rId) {\n          h[hyperlink.address] = rels[hyperlink.rId].Target;\n        }\n        return h;\n      }, {});\n      options.formulae = {};\n\n      // compact the rows and cells\n      model.rows = (model.rows && model.rows.filter(Boolean)) || [];\n      model.rows.forEach(row => {\n        row.cells = (row.cells && row.cells.filter(Boolean)) || [];\n      });\n\n      this.map.cols.reconcile(model.cols, options);\n      this.map.sheetData.reconcile(model.rows, options);\n\n      model.media = [];\n      if (model.drawing) {\n        const drawingRel = rels[model.drawing.rId];\n        const match = drawingRel.Target.match(/\\/drawings\\/([a-zA-Z0-9]+)[.][a-zA-Z]{3,4}$/);\n        if (match) {\n          const drawingName = match[1];\n          const drawing = options.drawings[drawingName];\n          drawing.anchors.forEach(anchor => {\n            if (anchor.medium) {\n              const image = {\n                type: 'image',\n                imageId: anchor.medium.index,\n                range: anchor.range,\n              };\n              model.media.push(image);\n            }\n          });\n        }\n      }\n\n      const backgroundRel = model.background && rels[model.background.rId];\n      if (backgroundRel) {\n        const target = backgroundRel.Target.split('/media/')[1];\n        const imageId = options.mediaIndex && options.mediaIndex[target];\n        if (imageId !== undefined) {\n          model.media.push({\n            type: 'background',\n            imageId,\n          });\n        }\n      }\n\n      delete model.relationships;\n      delete model.hyperlinks;\n      delete model.comments;\n    },\n  }\n);\n"],"file":"worksheet-xform.js"}