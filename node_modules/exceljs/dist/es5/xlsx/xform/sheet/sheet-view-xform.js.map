{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/sheet-view-xform.js"],"names":["utils","require","colCache","BaseXform","VIEW_STATES","frozen","frozenSplit","split","SheetViewXform","module","exports","inherits","tag","prepare","model","state","render","xmlStream","openNode","workbookViewId","add","name","value","included","addAttribute","rightToLeft","tabSelected","showRuler","showRowColHeaders","showGridLines","zoomScale","zoomScaleNormal","style","topLeftCell","xSplit","ySplit","activePane","getAddress","address","leafNode","undefined","pane","activeCell","sqref","closeNode","parseOpen","node","sheetView","parseInt","attributes","view","selections","parseText","parseClose","selection","topLeft","reconcile"],"mappings":"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","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst colCache = require('../../../utils/col-cache');\nconst BaseXform = require('../base-xform');\n\nconst VIEW_STATES = {\n  frozen: 'frozen',\n  frozenSplit: 'frozen',\n  split: 'split',\n};\n\nconst SheetViewXform = (module.exports = function() {});\n\nutils.inherits(SheetViewXform, BaseXform, {\n  get tag() {\n    return 'sheetView';\n  },\n\n  prepare(model) {\n    switch (model.state) {\n      case 'frozen':\n      case 'split':\n        break;\n      default:\n        model.state = 'normal';\n        break;\n    }\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openNode('sheetView', {\n      workbookViewId: model.workbookViewId || 0,\n    });\n    const add = function(name, value, included) {\n      if (included) {\n        xmlStream.addAttribute(name, value);\n      }\n    };\n    add('rightToLeft', '1', model.rightToLeft === true);\n    add('tabSelected', '1', model.tabSelected);\n    add('showRuler', '0', model.showRuler === false);\n    add('showRowColHeaders', '0', model.showRowColHeaders === false);\n    add('showGridLines', '0', model.showGridLines === false);\n    add('zoomScale', model.zoomScale, model.zoomScale);\n    add('zoomScaleNormal', model.zoomScaleNormal, model.zoomScaleNormal);\n    add('view', model.style, model.style);\n\n    let topLeftCell;\n    let xSplit;\n    let ySplit;\n    let activePane;\n    switch (model.state) {\n      case 'frozen':\n        xSplit = model.xSplit || 0;\n        ySplit = model.ySplit || 0;\n        topLeftCell = model.topLeftCell || colCache.getAddress(ySplit + 1, xSplit + 1).address;\n        activePane = (model.xSplit && model.ySplit && 'bottomRight') || (model.xSplit && 'topRight') || 'bottomLeft';\n\n        xmlStream.leafNode('pane', {\n          xSplit: model.xSplit || undefined,\n          ySplit: model.ySplit || undefined,\n          topLeftCell,\n          activePane,\n          state: 'frozen',\n        });\n        xmlStream.leafNode('selection', {\n          pane: activePane,\n          activeCell: model.activeCell,\n          sqref: model.activeCell,\n        });\n        break;\n      case 'split':\n        if (model.activePane === 'topLeft') {\n          model.activePane = undefined;\n        }\n        xmlStream.leafNode('pane', {\n          xSplit: model.xSplit || undefined,\n          ySplit: model.ySplit || undefined,\n          topLeftCell: model.topLeftCell,\n          activePane: model.activePane,\n        });\n        xmlStream.leafNode('selection', {\n          pane: model.activePane,\n          activeCell: model.activeCell,\n          sqref: model.activeCell,\n        });\n        break;\n      case 'normal':\n        if (model.activeCell) {\n          xmlStream.leafNode('selection', {\n            activeCell: model.activeCell,\n            sqref: model.activeCell,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n    xmlStream.closeNode();\n  },\n\n  parseOpen(node) {\n    switch (node.name) {\n      case 'sheetView':\n        this.sheetView = {\n          workbookViewId: parseInt(node.attributes.workbookViewId, 10),\n          rightToLeft: node.attributes.rightToLeft === '1',\n          tabSelected: node.attributes.tabSelected === '1',\n          showRuler: !(node.attributes.showRuler === '0'),\n          showRowColHeaders: !(node.attributes.showRowColHeaders === '0'),\n          showGridLines: !(node.attributes.showGridLines === '0'),\n          zoomScale: parseInt(node.attributes.zoomScale || '100', 10),\n          zoomScaleNormal: parseInt(node.attributes.zoomScaleNormal || '100', 10),\n          style: node.attributes.view,\n        };\n        this.pane = undefined;\n        this.selections = {};\n        return true;\n      case 'pane':\n        this.pane = {\n          xSplit: parseInt(node.attributes.xSplit || '0', 10),\n          ySplit: parseInt(node.attributes.ySplit || '0', 10),\n          topLeftCell: node.attributes.topLeftCell,\n          activePane: node.attributes.activePane || 'topLeft',\n          state: node.attributes.state,\n        };\n        return true;\n      case 'selection':\n        var name = node.attributes.pane || 'topLeft';\n        this.selections[name] = {\n          pane: name,\n          activeCell: node.attributes.activeCell,\n        };\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText() {},\n  parseClose(name) {\n    let model;\n    let selection;\n    switch (name) {\n      case 'sheetView':\n        if (this.sheetView && this.pane) {\n          model = this.model = {\n            workbookViewId: this.sheetView.workbookViewId,\n            rightToLeft: this.sheetView.rightToLeft,\n            state: VIEW_STATES[this.pane.state] || 'split', // split is default\n            xSplit: this.pane.xSplit,\n            ySplit: this.pane.ySplit,\n            topLeftCell: this.pane.topLeftCell,\n            showRuler: this.sheetView.showRuler,\n            showRowColHeaders: this.sheetView.showRowColHeaders,\n            showGridLines: this.sheetView.showGridLines,\n            zoomScale: this.sheetView.zoomScale,\n            zoomScaleNormal: this.sheetView.zoomScaleNormal,\n          };\n          if (this.model.state === 'split') {\n            model.activePane = this.pane.activePane;\n          }\n          selection = this.selections[this.pane.activePane];\n          if (selection && selection.activeCell) {\n            model.activeCell = selection.activeCell;\n          }\n          if (this.sheetView.style) {\n            model.style = this.sheetView.style;\n          }\n        } else {\n          model = this.model = {\n            workbookViewId: this.sheetView.workbookViewId,\n            rightToLeft: this.sheetView.rightToLeft,\n            state: 'normal',\n            showRuler: this.sheetView.showRuler,\n            showRowColHeaders: this.sheetView.showRowColHeaders,\n            showGridLines: this.sheetView.showGridLines,\n            zoomScale: this.sheetView.zoomScale,\n            zoomScaleNormal: this.sheetView.zoomScaleNormal,\n          };\n          selection = this.selections.topLeft;\n          if (selection && selection.activeCell) {\n            model.activeCell = selection.activeCell;\n          }\n          if (this.sheetView.style) {\n            model.style = this.sheetView.style;\n          }\n        }\n        return false;\n      default:\n        return true;\n    }\n  },\n\n  reconcile() {},\n});\n"],"file":"sheet-view-xform.js"}