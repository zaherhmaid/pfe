{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/print-options-xform.js"],"names":["_","require","utils","BaseXform","booleanToXml","model","undefined","PrintOptionsXform","module","exports","inherits","tag","render","xmlStream","attributes","headings","showRowColHeaders","gridLines","showGridLines","horizontalCentered","verticalCentered","some","value","leafNode","parseOpen","node","name","parseText","parseClose"],"mappings":"AAAA;;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,2BAAD,CAAjB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AAEA,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,GAAG,GAAH,GAASC,SAArB;AACD;;AAED,IAAMC,iBAAiB,GAAIC,MAAM,CAACC,OAAP,GAAiB,YAAW,CAAE,CAAzD;;AAEAP,KAAK,CAACQ,QAAN,CAAeH,iBAAf,EAAkCJ,SAAlC,EAA6C;AAC3C,MAAIQ,GAAJ,GAAU;AACR,WAAO,cAAP;AACD,GAH0C;;AAK3CC,EAAAA,MAL2C,kBAKpCC,SALoC,EAKzBR,KALyB,EAKlB;AACvB,QAAIA,KAAJ,EAAW;AACT,UAAMS,UAAU,GAAG;AACjBC,QAAAA,QAAQ,EAAEX,YAAY,CAACC,KAAK,CAACW,iBAAP,CADL;AAEjBC,QAAAA,SAAS,EAAEb,YAAY,CAACC,KAAK,CAACa,aAAP,CAFN;AAGjBC,QAAAA,kBAAkB,EAAEf,YAAY,CAACC,KAAK,CAACc,kBAAP,CAHf;AAIjBC,QAAAA,gBAAgB,EAAEhB,YAAY,CAACC,KAAK,CAACe,gBAAP;AAJb,OAAnB;;AAMA,UAAIpB,CAAC,CAACqB,IAAF,CAAOP,UAAP,EAAmB,UAAAQ,KAAK;AAAA,eAAIA,KAAK,KAAKhB,SAAd;AAAA,OAAxB,CAAJ,EAAsD;AACpDO,QAAAA,SAAS,CAACU,QAAV,CAAmB,KAAKZ,GAAxB,EAA6BG,UAA7B;AACD;AACF;AACF,GAjB0C;AAmB3CU,EAAAA,SAnB2C,qBAmBjCC,IAnBiC,EAmB3B;AACd,YAAQA,IAAI,CAACC,IAAb;AACE,WAAK,KAAKf,GAAV;AACE,aAAKN,KAAL,GAAa;AACXW,UAAAA,iBAAiB,EAAES,IAAI,CAACX,UAAL,CAAgBC,QAAhB,KAA6B,GADrC;AAEXG,UAAAA,aAAa,EAAEO,IAAI,CAACX,UAAL,CAAgBG,SAAhB,KAA8B,GAFlC;AAGXE,UAAAA,kBAAkB,EAAEM,IAAI,CAACX,UAAL,CAAgBK,kBAAhB,KAAuC,GAHhD;AAIXC,UAAAA,gBAAgB,EAAEK,IAAI,CAACX,UAAL,CAAgBM,gBAAhB,KAAqC;AAJ5C,SAAb;AAMA,eAAO,IAAP;;AACF;AACE,eAAO,KAAP;AAVJ;AAYD,GAhC0C;AAiC3CO,EAAAA,SAjC2C,uBAiC/B,CAAE,CAjC6B;AAkC3CC,EAAAA,UAlC2C,wBAkC9B;AACX,WAAO,KAAP;AACD;AApC0C,CAA7C","sourcesContent":["'use strict';\n\nconst _ = require('../../../utils/under-dash');\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\nfunction booleanToXml(model) {\n  return model ? '1' : undefined;\n}\n\nconst PrintOptionsXform = (module.exports = function() {});\n\nutils.inherits(PrintOptionsXform, BaseXform, {\n  get tag() {\n    return 'printOptions';\n  },\n\n  render(xmlStream, model) {\n    if (model) {\n      const attributes = {\n        headings: booleanToXml(model.showRowColHeaders),\n        gridLines: booleanToXml(model.showGridLines),\n        horizontalCentered: booleanToXml(model.horizontalCentered),\n        verticalCentered: booleanToXml(model.verticalCentered),\n      };\n      if (_.some(attributes, value => value !== undefined)) {\n        xmlStream.leafNode(this.tag, attributes);\n      }\n    }\n  },\n\n  parseOpen(node) {\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          showRowColHeaders: node.attributes.headings === '1',\n          showGridLines: node.attributes.gridLines === '1',\n          horizontalCentered: node.attributes.horizontalCentered === '1',\n          verticalCentered: node.attributes.verticalCentered === '1',\n        };\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText() {},\n  parseClose() {\n    return false;\n  },\n});\n"],"file":"print-options-xform.js"}